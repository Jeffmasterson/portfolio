"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/posts.js":
/*!**************************!*\
  !*** ./src/lib/posts.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllPosts\": function() { return /* binding */ getAllPosts; },\n/* harmony export */   \"getPagesCount\": function() { return /* binding */ getPagesCount; },\n/* harmony export */   \"getPaginatedPosts\": function() { return /* binding */ getPaginatedPosts; },\n/* harmony export */   \"getPostBySlug\": function() { return /* binding */ getPostBySlug; },\n/* harmony export */   \"getPostsByAuthorSlug\": function() { return /* binding */ getPostsByAuthorSlug; },\n/* harmony export */   \"getPostsByCategoryId\": function() { return /* binding */ getPostsByCategoryId; },\n/* harmony export */   \"getPostsPerPage\": function() { return /* binding */ getPostsPerPage; },\n/* harmony export */   \"getRecentPosts\": function() { return /* binding */ getRecentPosts; },\n/* harmony export */   \"getRelatedPosts\": function() { return /* binding */ getRelatedPosts; },\n/* harmony export */   \"mapPostData\": function() { return /* binding */ mapPostData; },\n/* harmony export */   \"postPathBySlug\": function() { return /* binding */ postPathBySlug; },\n/* harmony export */   \"sanitizeExcerpt\": function() { return /* binding */ sanitizeExcerpt; },\n/* harmony export */   \"sortStickyPosts\": function() { return /* binding */ sortStickyPosts; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var _swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/src/_object_without_properties.mjs */ \"./node_modules/@swc/helpers/src/_object_without_properties.mjs\");\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/* harmony import */ var _swc_helpers_src_type_of_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @swc/helpers/src/_type_of.mjs */ \"./node_modules/@swc/helpers/src/_type_of.mjs\");\n/* harmony import */ var _swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/src/_ts_generator.mjs */ \"./node_modules/@swc/helpers/src/_ts_generator.mjs\");\n/* harmony import */ var lib_apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/apollo-client */ \"./src/lib/apollo-client.js\");\n/* harmony import */ var lib_users__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/users */ \"./src/lib/users.js\");\n/* harmony import */ var lib_datetime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/datetime */ \"./src/lib/datetime.js\");\n/* harmony import */ var data_websites__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! data/websites */ \"./src/data/websites.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * postPathBySlug\n */ function postPathBySlug(slug) {\n    return \"/posts/\".concat(slug);\n}\n/**\n * getPostBySlug\n */ function getPostBySlug(slug) {\n    return _getPostBySlug.apply(this, arguments);\n}\nfunction _getPostBySlug() {\n    _getPostBySlug = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function(slug) {\n        var apolloClient, apiHost, postData, seoData, e, post, ref, e1, ref1, _seo, seo;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    apolloClient = (0,lib_apollo_client__WEBPACK_IMPORTED_MODULE_0__.getApolloClient)();\n                    apiHost = new URL(\"http://localhost/jeffmasterson/graphql\").host;\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        apolloClient.query({\n                            query: QUERY_POST_BY_SLUG,\n                            variables: {\n                                slug: slug\n                            }\n                        })\n                    ];\n                case 2:\n                    postData = _state.sent();\n                    return [\n                        3,\n                        4\n                    ];\n                case 3:\n                    e = _state.sent();\n                    console.log(\"[posts][getPostBySlug] Failed to query post data: \".concat(e.message));\n                    throw e;\n                case 4:\n                    if (!(postData === null || postData === void 0 ? void 0 : postData.data.post)) return [\n                        2,\n                        {\n                            post: undefined\n                        }\n                    ];\n                    post = [\n                        postData === null || postData === void 0 ? void 0 : postData.data.post\n                    ].map(mapPostData)[0];\n                    if (true) return [\n                        3,\n                        9\n                    ];\n                    _state.label = 5;\n                case 5:\n                    _state.trys.push([\n                        5,\n                        7,\n                        ,\n                        8\n                    ]);\n                    return [\n                        4,\n                        apolloClient.query({\n                            query: QUERY_POST_SEO_BY_SLUG,\n                            variables: {\n                                slug: slug\n                            }\n                        })\n                    ];\n                case 6:\n                    seoData = _state.sent();\n                    return [\n                        3,\n                        8\n                    ];\n                case 7:\n                    e1 = _state.sent();\n                    console.log(\"[posts][getPostBySlug] Failed to query SEO plugin: \".concat(e1.message));\n                    console.log(\"Is the SEO Plugin installed? If not, disable WORDPRESS_PLUGIN_SEO in next.config.js.\");\n                    throw e1;\n                case 8:\n                    ref1 = (seoData === null || seoData === void 0 ? void 0 : (ref = seoData.data) === null || ref === void 0 ? void 0 : ref.post) || {}, _seo = ref1.seo, seo = _seo === void 0 ? {} : _seo;\n                    post.metaTitle = seo.title;\n                    post.metaDescription = seo.metaDesc;\n                    post.readingTime = seo.readingTime;\n                    // The SEO plugin by default includes a canonical link, but we don't want to use that\n                    // because it includes the WordPress host, not the site host. We manage the canonical\n                    // link along with the other metadata, but explicitly check if there's a custom one\n                    // in here by looking for the API's host in the provided canonical link\n                    if (seo.canonical && !seo.canonical.includes(apiHost)) {\n                        post.canonical = seo.canonical;\n                    }\n                    post.og = {\n                        author: seo.opengraphAuthor,\n                        description: seo.opengraphDescription,\n                        image: seo.opengraphImage,\n                        modifiedTime: seo.opengraphModifiedTime,\n                        publishedTime: seo.opengraphPublishedTime,\n                        publisher: seo.opengraphPublisher,\n                        title: seo.opengraphTitle,\n                        type: seo.opengraphType\n                    };\n                    post.article = {\n                        author: post.og.author,\n                        modifiedTime: post.og.modifiedTime,\n                        publishedTime: post.og.publishedTime,\n                        publisher: post.og.publisher\n                    };\n                    post.robots = {\n                        nofollow: seo.metaRobotsNofollow,\n                        noindex: seo.metaRobotsNoindex\n                    };\n                    post.twitter = {\n                        description: seo.twitterDescription,\n                        image: seo.twitterImage,\n                        title: seo.twitterTitle\n                    };\n                    _state.label = 9;\n                case 9:\n                    return [\n                        2,\n                        {\n                            post: post\n                        }\n                    ];\n            }\n        });\n    });\n    return _getPostBySlug.apply(this, arguments);\n}\n/**\n * getAllPosts\n */ var allPostsIncludesTypes = {\n    all: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_ALL_WEBSITES,\n    archive: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_ALL_WEBSITES_ARCHIVE,\n    index: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_ALL_WEBSITES_INDEX\n};\nfunction getAllPosts() {\n    return _getAllPosts.apply(this, arguments);\n}\nfunction _getAllPosts() {\n    _getAllPosts = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function() {\n        var options, _queryIncludes, queryIncludes, apolloClient, data, posts;\n        var _arguments = arguments;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    options = _arguments.length > 0 && _arguments[0] !== void 0 ? _arguments[0] : {};\n                    _queryIncludes = options.queryIncludes, queryIncludes = _queryIncludes === void 0 ? \"index\" : _queryIncludes;\n                    apolloClient = (0,lib_apollo_client__WEBPACK_IMPORTED_MODULE_0__.getApolloClient)();\n                    return [\n                        4,\n                        apolloClient.query({\n                            query: allPostsIncludesTypes[queryIncludes]\n                        })\n                    ];\n                case 1:\n                    data = _state.sent();\n                    posts = data === null || data === void 0 ? void 0 : data.data.posts.edges.map(function(param) {\n                        var _node = param.node, node = _node === void 0 ? {} : _node;\n                        return node;\n                    });\n                    return [\n                        2,\n                        {\n                            posts: Array.isArray(posts) && posts.map(mapPostData)\n                        }\n                    ];\n            }\n        });\n    });\n    return _getAllPosts.apply(this, arguments);\n}\n/**\n * getPostsByAuthorSlug\n */ var postsByAuthorSlugIncludesTypes = {\n    all: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_WEBSITES_BY_AUTHOR_SLUG,\n    archive: QUERY_WEBSITES_BY_AUTHOR_SLUG_ARCHIVE,\n    index: QUERY_WEBSITES_BY_AUTHOR_SLUG_INDEX\n};\nfunction getPostsByAuthorSlug(_param) {\n    return _getPostsByAuthorSlug.apply(this, arguments);\n}\nfunction _getPostsByAuthorSlug() {\n    _getPostsByAuthorSlug = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function(_param) {\n        var slug, options, _queryIncludes, queryIncludes, apolloClient, postData, e, posts;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    slug = _param.slug, options = (0,_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_param, [\n                        \"slug\"\n                    ]);\n                    _queryIncludes = options.queryIncludes, queryIncludes = _queryIncludes === void 0 ? \"index\" : _queryIncludes;\n                    apolloClient = (0,lib_apollo_client__WEBPACK_IMPORTED_MODULE_0__.getApolloClient)();\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        apolloClient.query({\n                            query: postsByAuthorSlugIncludesTypes[queryIncludes],\n                            variables: {\n                                slug: slug\n                            }\n                        })\n                    ];\n                case 2:\n                    postData = _state.sent();\n                    return [\n                        3,\n                        4\n                    ];\n                case 3:\n                    e = _state.sent();\n                    console.log(\"[posts][getPostsByAuthorSlug] Failed to query post data: \".concat(e.message));\n                    throw e;\n                case 4:\n                    posts = postData === null || postData === void 0 ? void 0 : postData.data.posts.edges.map(function(param) {\n                        var _node = param.node, node = _node === void 0 ? {} : _node;\n                        return node;\n                    });\n                    return [\n                        2,\n                        {\n                            posts: Array.isArray(posts) && posts.map(mapPostData)\n                        }\n                    ];\n            }\n        });\n    });\n    return _getPostsByAuthorSlug.apply(this, arguments);\n}\n/**\n * getPostsByCategoryId\n */ var postsByCategoryIdIncludesTypes = {\n    all: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_WEBSITES_BY_CATEGORY_ID,\n    archive: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_WEBSITES_BY_CATEGORY_ID_ARCHIVE,\n    index: data_websites__WEBPACK_IMPORTED_MODULE_3__.QUERY_WEBSITES_BY_CATEGORY_ID_INDEX\n};\nfunction getPostsByCategoryId(_param) {\n    return _getPostsByCategoryId.apply(this, arguments);\n}\nfunction _getPostsByCategoryId() {\n    _getPostsByCategoryId = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function(_param) {\n        var categoryId, options, _queryIncludes, queryIncludes, apolloClient, postData, e, posts;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    categoryId = _param.categoryId, options = (0,_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_param, [\n                        \"categoryId\"\n                    ]);\n                    _queryIncludes = options.queryIncludes, queryIncludes = _queryIncludes === void 0 ? \"index\" : _queryIncludes;\n                    apolloClient = (0,lib_apollo_client__WEBPACK_IMPORTED_MODULE_0__.getApolloClient)();\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        apolloClient.query({\n                            query: postsByCategoryIdIncludesTypes[queryIncludes],\n                            variables: {\n                                categoryId: categoryId\n                            }\n                        })\n                    ];\n                case 2:\n                    postData = _state.sent();\n                    return [\n                        3,\n                        4\n                    ];\n                case 3:\n                    e = _state.sent();\n                    console.log(\"[posts][getPostsByCategoryId] Failed to query post data: \".concat(e.message));\n                    throw e;\n                case 4:\n                    posts = postData === null || postData === void 0 ? void 0 : postData.data.posts.edges.map(function(param) {\n                        var _node = param.node, node = _node === void 0 ? {} : _node;\n                        return node;\n                    });\n                    return [\n                        2,\n                        {\n                            posts: Array.isArray(posts) && posts.map(mapPostData)\n                        }\n                    ];\n            }\n        });\n    });\n    return _getPostsByCategoryId.apply(this, arguments);\n}\n/**\n * getRecentPosts\n */ function getRecentPosts(_param) {\n    return _getRecentPosts.apply(this, arguments);\n}\nfunction _getRecentPosts() {\n    _getRecentPosts = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function(_param) {\n        var count, options, posts, sorted;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    count = _param.count, options = (0,_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_param, [\n                        \"count\"\n                    ]);\n                    return [\n                        4,\n                        getAllPosts(options)\n                    ];\n                case 1:\n                    posts = _state.sent().posts;\n                    sorted = (0,lib_datetime__WEBPACK_IMPORTED_MODULE_2__.sortObjectsByDate)(posts);\n                    return [\n                        2,\n                        {\n                            posts: sorted.slice(0, count)\n                        }\n                    ];\n            }\n        });\n    });\n    return _getRecentPosts.apply(this, arguments);\n}\n/**\n * sanitizeExcerpt\n */ function sanitizeExcerpt(excerpt) {\n    if (typeof excerpt !== \"string\") {\n        throw new Error(\"Failed to sanitize excerpt: invalid type \".concat(typeof excerpt === \"undefined\" ? \"undefined\" : (0,_swc_helpers_src_type_of_mjs__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(excerpt)));\n    }\n    var sanitized = excerpt;\n    // If the theme includes [...] as the more indication, clean it up to just ...\n    sanitized = sanitized.replace(/\\s?\\[&hellip;\\]/, \"&hellip;\");\n    // If after the above replacement, the ellipsis includes 4 dots, it's\n    // the end of a setence\n    sanitized = sanitized.replace(\"....\", \".\");\n    sanitized = sanitized.replace(\".&hellip;\", \".\");\n    // If the theme is including a \"Continue...\" link, remove it\n    sanitized = sanitized.replace(/\\w*<a class=\"more-link\".*<\\/a>/, \"\");\n    return sanitized;\n}\n/**\n * mapPostData\n */ function mapPostData() {\n    var post = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    var ref;\n    var data = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({}, post);\n    // Clean up the author object to avoid someone having to look an extra\n    // level deeper into the node\n    if (data.author) {\n        data.author = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({}, data.author.node);\n    }\n    // The URL by default that comes from Gravatar / WordPress is not a secure\n    // URL. This ends up redirecting to https, but it gives mixed content warnings\n    // as the HTML shows it as http. Replace the url to avoid those warnings\n    // and provide a secure URL by default\n    if ((ref = data.author) === null || ref === void 0 ? void 0 : ref.avatar) {\n        data.author.avatar = (0,lib_users__WEBPACK_IMPORTED_MODULE_1__.updateUserAvatar)(data.author.avatar);\n    }\n    // Clean up the categories to make them more easy to access\n    if (data.categories) {\n        data.categories = data.categories.edges.map(function(param) {\n            var node = param.node;\n            return (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({}, node);\n        });\n    }\n    // Clean up the featured image to make them more easy to access\n    if (data.featuredImage) {\n        data.featuredImage = data.featuredImage.node;\n    }\n    return data;\n}\n/**\n * getRelatedPosts\n */ function getRelatedPosts(categories, postId) {\n    return _getRelatedPosts.apply(this, arguments);\n}\nfunction _getRelatedPosts() {\n    _getRelatedPosts = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function(categories, postId) {\n        var count, related, posts, filtered, sorted, relatedPosts;\n        var _arguments = arguments;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    count = _arguments.length > 2 && _arguments[2] !== void 0 ? _arguments[2] : 5;\n                    if (!Array.isArray(categories) || categories.length === 0) return [\n                        2\n                    ];\n                    related = {\n                        category: categories && categories.shift()\n                    };\n                    if (!related.category) return [\n                        3,\n                        2\n                    ];\n                    return [\n                        4,\n                        getPostsByCategoryId({\n                            categoryId: related.category.databaseId,\n                            queryIncludes: \"archive\"\n                        })\n                    ];\n                case 1:\n                    posts = _state.sent().posts;\n                    filtered = posts.filter(function(param) {\n                        var id = param.postId;\n                        return id !== postId;\n                    });\n                    sorted = (0,lib_datetime__WEBPACK_IMPORTED_MODULE_2__.sortObjectsByDate)(filtered);\n                    related.posts = sorted.map(function(post) {\n                        return {\n                            title: post.title,\n                            slug: post.slug\n                        };\n                    });\n                    _state.label = 2;\n                case 2:\n                    if (!(!Array.isArray(related.posts) || related.posts.length === 0)) return [\n                        3,\n                        4\n                    ];\n                    return [\n                        4,\n                        getRelatedPosts(categories, postId, count)\n                    ];\n                case 3:\n                    relatedPosts = _state.sent();\n                    related = relatedPosts || related;\n                    _state.label = 4;\n                case 4:\n                    if (Array.isArray(related.posts) && related.posts.length > count) {\n                        return [\n                            2,\n                            related.posts.slice(0, count)\n                        ];\n                    }\n                    return [\n                        2,\n                        related\n                    ];\n            }\n        });\n    });\n    return _getRelatedPosts.apply(this, arguments);\n}\n/**\n * sortStickyPosts\n */ function sortStickyPosts(posts) {\n    return (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(posts).sort(function(post) {\n        return post.isSticky ? -1 : 1;\n    });\n}\n/**\n * getPostsPerPage\n */ function getPostsPerPage() {\n    return _getPostsPerPage.apply(this, arguments);\n}\nfunction _getPostsPerPage() {\n    _getPostsPerPage = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function() {\n        var apolloClient, data, e;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    //If POST_PER_PAGE is defined at next.config.js\n                    if (process.env.POSTS_PER_PAGE) {\n                        console.warn('You are using the deprecated POST_PER_PAGE variable. Use your WordPress instance instead to set this value (\"Settings\" > \"Reading\" > \"Blog pages show at most\").');\n                        return [\n                            2,\n                            Number(process.env.POSTS_PER_PAGE)\n                        ];\n                    }\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    apolloClient = (0,lib_apollo_client__WEBPACK_IMPORTED_MODULE_0__.getApolloClient)();\n                    return [\n                        4,\n                        apolloClient.query({\n                            query: QUERY_WEBSITES_PER_PAGE\n                        })\n                    ];\n                case 2:\n                    data = _state.sent().data;\n                    return [\n                        2,\n                        Number(data.allSettings.readingSettingsPostsPerPage)\n                    ];\n                case 3:\n                    e = _state.sent();\n                    console.log(\"Failed to query post per page data: \".concat(e.message));\n                    throw e;\n                case 4:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return _getPostsPerPage.apply(this, arguments);\n}\n/**\n * getPageCount\n */ function getPagesCount(posts, postsPerPage) {\n    return _getPagesCount.apply(this, arguments);\n}\nfunction _getPagesCount() {\n    _getPagesCount = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function(posts, postsPerPage) {\n        var _postsPerPage, _tmp;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    if (!(postsPerPage !== null && postsPerPage !== void 0)) return [\n                        3,\n                        1\n                    ];\n                    _tmp = postsPerPage;\n                    return [\n                        3,\n                        3\n                    ];\n                case 1:\n                    return [\n                        4,\n                        getPostsPerPage()\n                    ];\n                case 2:\n                    _tmp = _state.sent();\n                    _state.label = 3;\n                case 3:\n                    _postsPerPage = _tmp;\n                    return [\n                        2,\n                        Math.ceil(posts.length / _postsPerPage)\n                    ];\n            }\n        });\n    });\n    return _getPagesCount.apply(this, arguments);\n}\n/**\n * getPaginatedPosts\n */ function getPaginatedPosts() {\n    return _getPaginatedPosts.apply(this, arguments);\n}\nfunction _getPaginatedPosts() {\n    _getPaginatedPosts = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(function() {\n        var _param, _currentPage, currentPage, options, posts, postsPerPage, pagesCount, page, offset, sortedPosts;\n        var _arguments = arguments;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _param = _arguments.length > 0 && _arguments[0] !== void 0 ? _arguments[0] : {};\n                    _currentPage = _param.currentPage, currentPage = _currentPage === void 0 ? 1 : _currentPage, options = (0,_swc_helpers_src_object_without_properties_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_param, [\n                        \"currentPage\"\n                    ]);\n                    return [\n                        4,\n                        getAllPosts(options)\n                    ];\n                case 1:\n                    posts = _state.sent().posts;\n                    return [\n                        4,\n                        getPostsPerPage()\n                    ];\n                case 2:\n                    postsPerPage = _state.sent();\n                    return [\n                        4,\n                        getPagesCount(posts, postsPerPage)\n                    ];\n                case 3:\n                    pagesCount = _state.sent();\n                    page = Number(currentPage);\n                    if (typeof page === \"undefined\" || isNaN(page)) {\n                        page = 1;\n                    } else if (page > pagesCount) {\n                        return [\n                            2,\n                            {\n                                posts: [],\n                                pagination: {\n                                    currentPage: undefined,\n                                    pagesCount: pagesCount\n                                }\n                            }\n                        ];\n                    }\n                    offset = postsPerPage * (page - 1);\n                    sortedPosts = sortStickyPosts(posts);\n                    return [\n                        2,\n                        {\n                            posts: sortedPosts.slice(offset, offset + postsPerPage),\n                            pagination: {\n                                currentPage: page,\n                                pagesCount: pagesCount\n                            }\n                        }\n                    ];\n            }\n        });\n    });\n    return _getPaginatedPosts.apply(this, arguments);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/posts.js\n"));

/***/ })

});